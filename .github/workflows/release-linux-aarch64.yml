name: release-linux-aarch64

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - name: 下载submodule源码
      run: mv -f .gitmodules_github .gitmodules && git submodule sync && git submodule update --init

    - name: 下载 SRTP
      uses: actions/checkout@v2
      with:
        repository: cisco/libsrtp
        fetch-depth: 1
        ref: v2.3.0
        path: 3rdpart/libsrtp

    - name: ls
      run: ls .

    - name: Run Build ARM lib in chroot environment
      uses: pguyot/arm-runner-action@v2
      id: arm_runner_build
      with:
        base_image: raspios_lite_arm64:latest
        cpu: cortex-a53
        cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
        image_additional_mb: 2048
        bind_mount_repository: true
        commands: |
          sudo apt-get install -y cmake libssl-dev libsdl1.2-dev libavcodec-dev libavutil-dev libswscale-dev libresample-dev libusrsctp-dev
          cmake --version
          gcc --version
          g++ --version
          ld --version
          sudo apt-get clean
          pwd
          ls -ltrh .
          cd 3rdpart/libsrtp && ./configure --enable-openssl && make -j4 && sudo make install
          pwd
          cd ../..
          pwd
          mkdir -p linux_build && cd linux_build && cmake .. -DENABLE_WEBRTC=true -DENABLE_FFMPEG=true && make -j $(nproc)
          cd ..
          pwd
          ls release/linux/Debug
          file release/linux/Debug/libmk_api.so
      
    - name: ls so file
      run: ls release/linux/Debug
    
    - name: get file so arch
      run: file release/linux/Debug/libmk_api.so
    
    

